{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Code\\\\helix-app\\\\client\\\\src\\\\components\\\\views\\\\SequenceRender.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ShowMoreButton from \"./ShowMoreButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SequenceRender(_ref) {\n  _s();\n\n  let {\n    reload,\n    sequenceArray,\n    setIconVisibility,\n    setVisibility,\n    visibility,\n    basePairColors,\n    selectedRegion,\n    setShowMoreButton,\n    setSelectedRegion,\n    annotationText\n  } = _ref;\n  const rowSize = 20;\n  const rowMargin = 10;\n  const dnaContainerSize = 90;\n  const marginBottom = 80;\n  const headerMargin = 90;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [bpPresent, setbpPresent] = useState([]);\n  const [renderSequence, setRenderSequence] = useState([]);\n  const [containerWidth, setContainerWidth] = useState();\n  const [cellsPerRow, setCellsPerRow] = useState();\n  const [rowCount, setRowCount] = useState();\n  const [rowMarkersLeft, setRowMarkersLeft] = useState([]);\n  const [rowMarkersRight, setRowMarkersRight] = useState([]);\n  const [basePairs, setBasePairs] = useState([]); // resize handling\n\n  window.addEventListener('resize', () => {\n    setTimeout(() => {\n      const width = document.getElementById('dna').offsetWidth;\n      setContainerWidth(width);\n    }, 700);\n  }); // sequence config\n\n  useEffect(() => {\n    setRenderSequence(sequenceArray.slice(selectedRegion[0], selectedRegion[1]));\n  }, [sequenceArray, selectedRegion]); // show more\n\n  useEffect(() => {\n    // bug: show more button does not appear sometimes\n    if (sequenceArray.length > selectedRegion[1] && renderSequence.length < sequenceArray.length) {\n      setShowMoreButton( /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n        setSelectedRegion: setSelectedRegion,\n        selectedRegion: selectedRegion,\n        visibility: visibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this));\n    } else setShowMoreButton(); // eslint-disable-next-line\n\n  }, [renderSequence, selectedRegion]); // container formatting\n\n  useEffect(() => {\n    setContainerWidth(document.getElementById('dna').offsetWidth);\n  }, []);\n  useEffect(() => {\n    setCellsPerRow(Math.floor(containerWidth / 20));\n  }, [containerWidth]);\n  useEffect(() => {\n    setRowCount(Math.ceil(renderSequence.length / cellsPerRow));\n  }, [cellsPerRow, renderSequence]);\n  useEffect(() => {\n    const rows = [1];\n\n    for (let i = 1; i < rowCount; i++) {\n      rows.push(i * cellsPerRow + 1);\n    }\n\n    setRowMarkersLeft(rows);\n    const right = rows.map(num => num = num + cellsPerRow - 1);\n    right.pop();\n    right.push(renderSequence.length);\n    setRowMarkersRight(right);\n    const cells = [];\n\n    for (let i = 0; i < renderSequence.length; i++) {\n      cells.push(i);\n    }\n\n    setBasePairs(cells);\n  }, [rowCount, cellsPerRow, renderSequence]); // building blocks\n\n  const leftCounters = rowMarkersLeft.map(num => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        height: rowSize,\n        width: 'fit-content',\n        textAlign: 'center',\n        marginBottom: rowMargin\n      },\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  });\n  const rightCounters = rowMarkersRight.map(num => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        height: rowSize,\n        width: 'fit-content',\n        textAlign: 'center',\n        marginBottom: rowMargin\n      },\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  });\n  const basePairElements = basePairs.map((bp, index) => {\n    let color;\n\n    switch (renderSequence[index]) {\n      // need to handle amino acid styling\n      case 'A':\n        color = basePairColors.A;\n        break;\n\n      case 'T':\n        color = basePairColors.T;\n        break;\n\n      case 'G':\n        color = basePairColors.G;\n        break;\n\n      case 'C':\n        color = basePairColors.C;\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: showBasePair,\n      className: \"bp\",\n      id: index + 1,\n      style: {\n        height: rowSize,\n        width: rowSize,\n        justifyContent: 'center',\n        display: 'flex',\n        color: color\n      },\n      children: renderSequence[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  });\n  const rowElements = rowMarkersLeft.map((row, index, array) => {\n    if (index === rowMarkersLeft.length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: rowSize,\n          marginBottom: rowMargin,\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: basePairElements.slice(array[index] - 1, renderSequence.length)\n      }, array[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: rowSize,\n          marginBottom: rowMargin,\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        children: basePairElements.slice(array[index] - 1, array[index + 1] - 1)\n      }, array[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this);\n    }\n  }); // styling\n\n  useEffect(() => {\n    document.querySelectorAll('.bp').forEach(element => {\n      const bp = element.textContent;\n\n      switch (bp) {\n        case 'A':\n          element.style.color = basePairColors.A;\n          break;\n\n        case 'T':\n          element.style.color = basePairColors.T;\n          break;\n\n        case 'G':\n          element.style.color = basePairColors.G;\n          break;\n\n        case 'C':\n          element.style.color = basePairColors.C;\n          break;\n\n        default:\n          break;\n      }\n    });\n  }, [basePairColors]); // loading\n\n  useEffect(() => {\n    setbpPresent(document.querySelectorAll('.bp').length);\n  }, [basePairElements]);\n  useEffect(() => {\n    if (bpPresent === renderSequence.length && bpPresent > 1) {\n      setIsLoaded(true);\n    } else {\n      setIsLoaded(false);\n    }\n  }, [bpPresent, renderSequence]);\n  useEffect(() => {\n    // note: can remove loading gif after loaded?\n    if (isLoaded === true) {\n      setVisibility('visible');\n      setIconVisibility('hidden');\n    } else {\n      setVisibility('hidden');\n      setIconVisibility('visible');\n    } // eslint-disable-next-line\n\n  }, [isLoaded]);\n  useEffect(() => {\n    setIsLoaded(!isLoaded); // eslint-disable-next-line\n  }, [reload]);\n\n  function showBasePair(event) {\n    // note: should incorporate this functionality into a feature\n    console.log('bp: ' + event.target.id);\n  } // note: should annotationText be here?\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    style: {\n      zIndex: 0,\n      height: `fit-content`,\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: headerMargin,\n      overflowX: 'clip'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"column\",\n      style: {\n        visibility: visibility,\n        height: '100%',\n        width: `${(100 - dnaContainerSize) / 2}%`,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        userSelect: 'none'\n      },\n      children: leftCounters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dna\",\n      style: {\n        visibility: visibility,\n        width: `${dnaContainerSize}%`,\n        height: '100%',\n        justifyContent: 'center',\n        marginBottom: marginBottom\n      },\n      children: rowElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"column\",\n      style: {\n        visibility: visibility,\n        height: '100%',\n        width: `${(100 - dnaContainerSize) / 2}%`,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        userSelect: 'none'\n      },\n      children: rightCounters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), annotationText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SequenceRender, \"2ZMwoi89UDUH+06JxKIVr7/vZJ8=\");\n\n_c = SequenceRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"SequenceRender\");","map":{"version":3,"names":["useState","useEffect","ShowMoreButton","SequenceRender","reload","sequenceArray","setIconVisibility","setVisibility","visibility","basePairColors","selectedRegion","setShowMoreButton","setSelectedRegion","annotationText","rowSize","rowMargin","dnaContainerSize","marginBottom","headerMargin","isLoaded","setIsLoaded","bpPresent","setbpPresent","renderSequence","setRenderSequence","containerWidth","setContainerWidth","cellsPerRow","setCellsPerRow","rowCount","setRowCount","rowMarkersLeft","setRowMarkersLeft","rowMarkersRight","setRowMarkersRight","basePairs","setBasePairs","window","addEventListener","setTimeout","width","document","getElementById","offsetWidth","slice","length","Math","floor","ceil","rows","i","push","right","map","num","pop","cells","leftCounters","height","textAlign","rightCounters","basePairElements","bp","index","color","A","T","G","C","showBasePair","justifyContent","display","rowElements","row","array","flexDirection","querySelectorAll","forEach","element","textContent","style","event","console","log","target","id","zIndex","marginTop","overflowX","alignItems","userSelect"],"sources":["C:/Users/micha/OneDrive/Documents/Code/helix-app/client/src/components/views/SequenceRender.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport ShowMoreButton from \"./ShowMoreButton\"\r\n\r\nexport default function SequenceRender ( { reload, sequenceArray, setIconVisibility, setVisibility, visibility, basePairColors, selectedRegion, setShowMoreButton, setSelectedRegion, annotationText } ) {\r\n\r\n    const rowSize = 20\r\n    const rowMargin = 10\r\n    const dnaContainerSize = 90\r\n    const marginBottom = 80\r\n    const headerMargin = 90\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [bpPresent, setbpPresent] = useState([])\r\n    const [renderSequence, setRenderSequence] = useState([])\r\n\r\n    const [containerWidth, setContainerWidth] = useState()\r\n    const [cellsPerRow, setCellsPerRow] = useState()\r\n    const [rowCount, setRowCount] = useState()\r\n    const [rowMarkersLeft, setRowMarkersLeft] = useState([])\r\n    const [rowMarkersRight, setRowMarkersRight] = useState([])\r\n    const [basePairs, setBasePairs] = useState([])\r\n\r\n\r\n\r\n    // resize handling\r\n    window.addEventListener('resize', () => {\r\n        setTimeout(() => {\r\n            const width = document.getElementById('dna').offsetWidth\r\n            setContainerWidth(width)\r\n        }, 700)\r\n    })\r\n\r\n    // sequence config\r\n    useEffect(() => {\r\n        setRenderSequence(sequenceArray.slice(selectedRegion[0], selectedRegion[1]))\r\n    }, [sequenceArray, selectedRegion])\r\n\r\n    // show more\r\n    useEffect(() => { // bug: show more button does not appear sometimes\r\n        if(sequenceArray.length > selectedRegion[1] && renderSequence.length < sequenceArray.length ) {\r\n            setShowMoreButton(<ShowMoreButton setSelectedRegion={setSelectedRegion} selectedRegion={selectedRegion} visibility={visibility}/>)\r\n        } else setShowMoreButton()\r\n        // eslint-disable-next-line\r\n    }, [renderSequence, selectedRegion])\r\n\r\n\r\n    // container formatting\r\n    useEffect(() => {\r\n        setContainerWidth(document.getElementById('dna').offsetWidth)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCellsPerRow(Math.floor(containerWidth / 20))\r\n    }, [containerWidth])\r\n\r\n    useEffect(() => {\r\n        setRowCount(Math.ceil(renderSequence.length / cellsPerRow))\r\n    }, [cellsPerRow, renderSequence])\r\n\r\n    useEffect(() => {\r\n        const rows = [1]\r\n        for(let i = 1; i < rowCount; i++) {\r\n            rows.push((i*cellsPerRow)+1)\r\n        }\r\n        setRowMarkersLeft(rows)\r\n        const right = rows.map((num) => num = (num + cellsPerRow - 1))\r\n        right.pop()\r\n        right.push(renderSequence.length)\r\n        setRowMarkersRight(right)\r\n        const cells = []\r\n        for(let i = 0; i < renderSequence.length; i++) {\r\n            cells.push((i))\r\n        }\r\n        setBasePairs(cells)\r\n    }, [rowCount, cellsPerRow, renderSequence])\r\n\r\n\r\n    // building blocks\r\n    const leftCounters = rowMarkersLeft.map((num) => {\r\n        return (\r\n            <span key={num} style={{height: rowSize, width: 'fit-content', textAlign: 'center', marginBottom: rowMargin }}>{num}</span>\r\n        )\r\n    })\r\n\r\n    const rightCounters = rowMarkersRight.map((num) => {\r\n        return (\r\n            <span key={num} style={{height: rowSize, width: 'fit-content', textAlign: 'center', marginBottom: rowMargin }}>{num}</span>\r\n        )\r\n    })\r\n\r\n    const basePairElements = basePairs.map((bp, index) => {\r\n        let color \r\n        switch (renderSequence[index]) { // need to handle amino acid styling\r\n            case 'A':\r\n                color = basePairColors.A\r\n                break\r\n\r\n            case 'T':\r\n                color = basePairColors.T\r\n                break\r\n\r\n            case 'G':\r\n                color = basePairColors.G\r\n                break\r\n\r\n            case 'C':\r\n                color = basePairColors.C\r\n                break;\r\n\r\n            default:\r\n                break\r\n        }\r\n\r\n\r\n        return (\r\n            <span key={index} onClick={showBasePair} className='bp' id={index+1} style={{ height: rowSize, width: rowSize, justifyContent: 'center', display: 'flex', color: color }}>{renderSequence[index]}</span>\r\n        )\r\n    })\r\n\r\n    const rowElements = rowMarkersLeft.map((row, index, array) => {\r\n        if (index === (rowMarkersLeft.length - 1)) {\r\n            return (\r\n                <div key={array[index]} style={{ width: '100%', height: rowSize, marginBottom: rowMargin, display: 'flex', flexDirection: 'row' }}>\r\n                    {basePairElements.slice((array[index]-1), (renderSequence.length))}\r\n                </div>\r\n            )} \r\n        else {\r\n            return (\r\n                <div key={array[index]} style={{ width: '100%', height: rowSize, marginBottom: rowMargin, display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n                    {basePairElements.slice((array[index]-1), (array[index+1]-1))}\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n\r\n    // styling\r\n    useEffect(() => {\r\n        document.querySelectorAll('.bp').forEach((element) => {\r\n            const bp = element.textContent\r\n            switch (bp) {\r\n                case 'A':\r\n                    element.style.color = basePairColors.A\r\n                    break\r\n    \r\n                case 'T':\r\n                    element.style.color = basePairColors.T\r\n                    break\r\n    \r\n                case 'G':\r\n                    element.style.color = basePairColors.G\r\n                    break\r\n    \r\n                case 'C':\r\n                    element.style.color = basePairColors.C\r\n                    break;\r\n    \r\n                default:\r\n                    break\r\n            }\r\n        })\r\n    }, [basePairColors])\r\n\r\n    // loading\r\n    useEffect(() => {\r\n        setbpPresent(document.querySelectorAll('.bp').length)\r\n    }, [basePairElements])\r\n\r\n    useEffect(() => {\r\n        if(bpPresent === renderSequence.length && bpPresent > 1) {\r\n            setIsLoaded(true)\r\n        }\r\n        else {\r\n            setIsLoaded(false)\r\n        }\r\n    }, [bpPresent, renderSequence])\r\n\r\n    useEffect(() => { // note: can remove loading gif after loaded?\r\n        if (isLoaded === true) {\r\n            setVisibility('visible')\r\n            setIconVisibility('hidden')\r\n        } \r\n        else {\r\n            setVisibility('hidden')\r\n            setIconVisibility('visible')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isLoaded])\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(!isLoaded)\r\n    // eslint-disable-next-line\r\n    }, [reload])\r\n\r\n\r\n    \r\n    function showBasePair(event) { // note: should incorporate this functionality into a feature\r\n        console.log('bp: ' + event.target.id)\r\n    }\r\n\r\n    \r\n\r\n    // note: should annotationText be here?\r\n\r\n    return (\r\n        <div id=\"container\" style={{ zIndex: 0, height: `fit-content`, width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', marginTop: headerMargin, overflowX: 'clip' }}>\r\n            <div id=\"column\" style={{ visibility: visibility, height: '100%', width: `${(100 - dnaContainerSize) / 2}%`, display: 'flex', flexDirection: 'column', alignItems: 'center', userSelect: 'none' }}>{leftCounters}</div>\r\n                <div id=\"dna\" style={{ visibility: visibility, width: `${dnaContainerSize}%`, height: '100%', justifyContent: 'center', marginBottom: marginBottom }}>\r\n                    {rowElements}\r\n                </div>\r\n            <div id=\"column\" style={{ visibility: visibility, height: '100%', width: `${(100 - dnaContainerSize) / 2}%`, display: 'flex', flexDirection: 'column', alignItems: 'center', userSelect: 'none' }}>{rightCounters}</div>\r\n            {annotationText}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}