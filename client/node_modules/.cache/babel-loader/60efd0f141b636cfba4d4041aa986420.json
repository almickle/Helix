{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Code\\\\helix-app\\\\client\\\\src\\\\components\\\\panel\\\\directory\\\\Entry.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Tab from \"./Tab\";\nimport Contents from \"./Contents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Entry(_ref) {\n  _s();\n\n  let {\n    config,\n    geneData,\n    setGeneData,\n    geneIndex,\n    renderLevel,\n    previousIndex,\n    entryIndex,\n    setTranscriptIndex,\n    setPresentView,\n    setSequenceID,\n    setInputData,\n    reload,\n    setReload\n  } = _ref;\n  const currentLevel = renderLevel + 1;\n  const [directoryOpen, setDirectoryOpen] = useState(false);\n\n  const arrayHasIndex = (array, index) => Array.isArray(array) && array.hasOwnProperty(index);\n\n  function isArray(array, index, entry) {\n    if (arrayHasIndex(array, index) === true) {\n      const nextArray = array[index];\n      return arrayHasIndex(nextArray, entry);\n    } else return false;\n  }\n\n  let border = 1;\n\n  if (renderLevel === 0) {\n    border = 0;\n  }\n\n  if (renderLevel === 1 && entryIndex === config[renderLevel + 1][previousIndex].length - 1) {\n    border = 0;\n  }\n\n  if (currentLevel < config.length) {\n    if (directoryOpen === true && isArray(config, currentLevel + 1, entryIndex)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          height: 'fit-content'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: config[currentLevel][previousIndex][entryIndex],\n          geneIndex: geneIndex,\n          geneData: geneData,\n          setGeneData: setGeneData,\n          setDirectoryOpen: setDirectoryOpen,\n          directoryOpen: directoryOpen,\n          setTranscriptIndex: setTranscriptIndex,\n          setPresentView: setPresentView,\n          setSequenceID: setSequenceID,\n          renderLevel: currentLevel,\n          config: config,\n          entryIndex: entryIndex,\n          previousIndex: previousIndex,\n          setInputData: setInputData,\n          reload: reload,\n          setReload: setReload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `R:${renderLevel}, P:${previousIndex}, E:${entryIndex}`,\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            height: 'fit-content',\n            borderLeft: 'solid',\n            borderWidth: border,\n            borderColor: 'rgb(200, 200, 200)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Contents, {\n            config: config,\n            geneIndex: geneIndex,\n            geneData: geneData,\n            setGeneData: setGeneData,\n            renderLevel: currentLevel,\n            entryIndex: entryIndex,\n            previousIndex: previousIndex,\n            setTranscriptIndex: setTranscriptIndex,\n            setPresentView: setPresentView,\n            setSequenceID: setSequenceID,\n            setInputData: setInputData,\n            reload: reload,\n            setReload: setReload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          height: 'fit-content'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          label: config[currentLevel][previousIndex][entryIndex],\n          geneIndex: geneIndex,\n          geneData: geneData,\n          setGeneData: setGeneData,\n          setDirectoryOpen: setDirectoryOpen,\n          directoryOpen: directoryOpen,\n          setTranscriptIndex: setTranscriptIndex,\n          setPresentView: setPresentView,\n          setSequenceID: setSequenceID,\n          renderLevel: currentLevel,\n          config: config,\n          entryIndex: entryIndex,\n          previousIndex: previousIndex,\n          setInputData: setInputData,\n          reload: reload,\n          setReload: setReload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_s(Entry, \"dI9PbkfxLTXshJK1f/9Dlw5SHc8=\");\n\n_c = Entry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"names":["useState","Tab","Contents","Entry","config","geneData","setGeneData","geneIndex","renderLevel","previousIndex","entryIndex","setTranscriptIndex","setPresentView","setSequenceID","setInputData","reload","setReload","currentLevel","directoryOpen","setDirectoryOpen","arrayHasIndex","array","index","Array","isArray","hasOwnProperty","entry","nextArray","border","length","display","flexDirection","height","borderLeft","borderWidth","borderColor"],"sources":["C:/Users/micha/OneDrive/Documents/Code/helix-app/client/src/components/panel/directory/Entry.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport Tab from \"./Tab\"\r\nimport Contents from \"./Contents\"\r\n\r\nexport default function Entry ( { config, geneData, setGeneData, geneIndex, renderLevel, previousIndex, entryIndex, setTranscriptIndex, setPresentView, setSequenceID, setInputData, reload, setReload } ) {\r\n\r\n    const currentLevel = renderLevel + 1\r\n    const [directoryOpen, setDirectoryOpen] = useState(false)\r\n\r\n    const arrayHasIndex = (array, index) => Array.isArray(array) && array.hasOwnProperty(index)\r\n\r\n    function isArray(array, index, entry) {\r\n        if (arrayHasIndex(array, index) === true) {\r\n            const nextArray = array[index]\r\n            return (\r\n                arrayHasIndex(nextArray, entry)\r\n            )\r\n        } else return false\r\n    }\r\n\r\n    let border = 1\r\n    if(renderLevel === 0) {\r\n        border = 0\r\n    }\r\n    if(renderLevel === 1 && entryIndex === config[renderLevel+1][previousIndex].length-1) {\r\n        border = 0\r\n    }\r\n\r\n    if(currentLevel < config.length) {\r\n        \r\n        if(directoryOpen === true && isArray(config, (currentLevel+1), entryIndex)) {\r\n            return (\r\n                <div style={{ display: 'flex', flexDirection: 'column', height: 'fit-content' }}>\r\n                    <Tab label={config[currentLevel][previousIndex][entryIndex]} geneIndex={geneIndex} geneData={geneData} setGeneData={setGeneData} setDirectoryOpen={setDirectoryOpen} directoryOpen={directoryOpen} setTranscriptIndex={setTranscriptIndex} setPresentView={setPresentView} setSequenceID={setSequenceID} renderLevel={currentLevel} config={config} entryIndex={entryIndex} previousIndex={previousIndex} setInputData={setInputData} reload={reload} setReload={setReload}/> \r\n                    <div id={`R:${renderLevel}, P:${previousIndex}, E:${entryIndex}`} style={{ display: 'flex', flexDirection: 'row', height: 'fit-content', borderLeft: 'solid', borderWidth: border, borderColor: 'rgb(200, 200, 200)' }}>\r\n                        <Contents config={config} geneIndex={geneIndex} geneData={geneData} setGeneData={setGeneData} renderLevel={currentLevel} entryIndex={entryIndex} previousIndex={previousIndex} setTranscriptIndex={setTranscriptIndex} setPresentView={setPresentView} setSequenceID={setSequenceID} setInputData={setInputData} reload={reload} setReload={setReload}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ display: 'flex', flexDirection: 'column', height: 'fit-content' }}>\r\n                    <Tab label={config[currentLevel][previousIndex][entryIndex]} geneIndex={geneIndex} geneData={geneData} setGeneData={setGeneData} setDirectoryOpen={setDirectoryOpen} directoryOpen={directoryOpen} setTranscriptIndex={setTranscriptIndex} setPresentView={setPresentView} setSequenceID={setSequenceID} renderLevel={currentLevel} config={config} entryIndex={entryIndex} previousIndex={previousIndex} setInputData={setInputData} reload={reload} setReload={setReload}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}