{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Code\\\\helix-app\\\\client\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ViewDNA from \"./views/ViewDNA\";\nimport ViewRNA from \"./views/ViewRNA\";\nimport ViewProtein from \"./views/ViewProtein\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main(_ref) {\n  _s();\n\n  let {\n    mainHeight,\n    inputData,\n    reload,\n    setReload,\n    geneData,\n    setGeneData,\n    setSequenceID,\n    sequenceID,\n    presentView,\n    transcriptIndex,\n    rerenderLibrary,\n    setRerenderLibrary\n  } = _ref;\n  const [annotationText, setAnnotationText] = useState(null);\n\n  const sequenceView = () => {\n    switch (presentView) {\n      case 'DNA':\n        return /*#__PURE__*/_jsxDEV(ViewDNA, {\n          inputData: inputData,\n          annotationText: annotationText,\n          setAnnotationText: setAnnotationText,\n          reload: reload,\n          setReload: setReload,\n          geneData: geneData,\n          setGeneData: setGeneData,\n          setSequenceID: setSequenceID,\n          sequenceID: sequenceID,\n          rerenderLibrary: rerenderLibrary,\n          setRerenderLibrary: setRerenderLibrary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 24\n        }, this);\n\n      case 'RNA':\n        return /*#__PURE__*/_jsxDEV(ViewRNA, {\n          reload: reload,\n          annotationText: annotationText,\n          setAnnotationText: setAnnotationText,\n          geneData: geneData,\n          sequenceID: sequenceID,\n          transcriptIndex: transcriptIndex,\n          rerenderLibrary: rerenderLibrary,\n          setRerenderLibrary: setRerenderLibrary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this);\n\n      case 'Protein':\n        return /*#__PURE__*/_jsxDEV(ViewProtein, {\n          reload: reload,\n          annotationText: annotationText,\n          setAnnotationText: setAnnotationText,\n          geneData: geneData,\n          sequenceID: sequenceID,\n          transcriptIndex: transcriptIndex,\n          rerenderLibrary: rerenderLibrary,\n          setRerenderLibrary: setRerenderLibrary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  function handleScroll() {\n    if (document.getElementById('note')) {\n      setAnnotationText(null);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    onScroll: handleScroll,\n    style: {\n      height: `${mainHeight}%`,\n      width: '100%',\n      overflowY: 'scroll',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: sequenceView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"YLX0wznOH7AGNzPayBy07oOPBrw=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","ViewDNA","ViewRNA","ViewProtein","Main","mainHeight","inputData","reload","setReload","geneData","setGeneData","setSequenceID","sequenceID","presentView","transcriptIndex","rerenderLibrary","setRerenderLibrary","annotationText","setAnnotationText","sequenceView","handleScroll","document","getElementById","height","width","overflowY","display","justifyContent"],"sources":["C:/Users/micha/OneDrive/Documents/Code/helix-app/client/src/components/Main.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport ViewDNA from \"./views/ViewDNA\";\r\nimport ViewRNA from \"./views/ViewRNA\";\r\nimport ViewProtein from \"./views/ViewProtein\";\r\n\r\nexport default function Main ( { mainHeight, inputData, reload, setReload, geneData, setGeneData, setSequenceID, sequenceID, presentView, transcriptIndex, rerenderLibrary, setRerenderLibrary } ) {\r\n\r\n    const [annotationText, setAnnotationText] = useState(null)\r\n\r\n\r\n    const sequenceView = () => {\r\n        switch (presentView) {\r\n            case 'DNA':\r\n                return <ViewDNA inputData={inputData} annotationText={annotationText} setAnnotationText={setAnnotationText} reload={reload} setReload={setReload} geneData={geneData} setGeneData={setGeneData} setSequenceID={setSequenceID} sequenceID={sequenceID} rerenderLibrary={rerenderLibrary} setRerenderLibrary={setRerenderLibrary}/>\r\n            case 'RNA':\r\n                return <ViewRNA reload={reload} annotationText={annotationText} setAnnotationText={setAnnotationText} geneData={geneData} sequenceID={sequenceID} transcriptIndex={transcriptIndex} rerenderLibrary={rerenderLibrary} setRerenderLibrary={setRerenderLibrary}/>\r\n            case 'Protein':\r\n                return <ViewProtein reload={reload} annotationText={annotationText} setAnnotationText={setAnnotationText} geneData={geneData} sequenceID={sequenceID} transcriptIndex={transcriptIndex} rerenderLibrary={rerenderLibrary} setRerenderLibrary={setRerenderLibrary}/>\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    function handleScroll() {\r\n        if(document.getElementById('note')) {\r\n            setAnnotationText(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='main' onScroll={handleScroll} style={{ height: `${mainHeight}%`, width: '100%', overflowY: 'scroll', display: 'flex', justifyContent: 'center' }}>\r\n            {sequenceView()}\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,eAAe,SAASC,IAAT,OAAoL;EAAA;;EAAA,IAApK;IAAEC,UAAF;IAAcC,SAAd;IAAyBC,MAAzB;IAAiCC,SAAjC;IAA4CC,QAA5C;IAAsDC,WAAtD;IAAmEC,aAAnE;IAAkFC,UAAlF;IAA8FC,WAA9F;IAA2GC,eAA3G;IAA4HC,eAA5H;IAA6IC;EAA7I,CAAoK;EAE/L,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;;EAGA,MAAMmB,YAAY,GAAG,MAAM;IACvB,QAAQN,WAAR;MACI,KAAK,KAAL;QACI,oBAAO,QAAC,OAAD;UAAS,SAAS,EAAEP,SAApB;UAA+B,cAAc,EAAEW,cAA/C;UAA+D,iBAAiB,EAAEC,iBAAlF;UAAqG,MAAM,EAAEX,MAA7G;UAAqH,SAAS,EAAEC,SAAhI;UAA2I,QAAQ,EAAEC,QAArJ;UAA+J,WAAW,EAAEC,WAA5K;UAAyL,aAAa,EAAEC,aAAxM;UAAuN,UAAU,EAAEC,UAAnO;UAA+O,eAAe,EAAEG,eAAhQ;UAAiR,kBAAkB,EAAEC;QAArS;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ,KAAK,KAAL;QACI,oBAAO,QAAC,OAAD;UAAS,MAAM,EAAET,MAAjB;UAAyB,cAAc,EAAEU,cAAzC;UAAyD,iBAAiB,EAAEC,iBAA5E;UAA+F,QAAQ,EAAET,QAAzG;UAAmH,UAAU,EAAEG,UAA/H;UAA2I,eAAe,EAAEE,eAA5J;UAA6K,eAAe,EAAEC,eAA9L;UAA+M,kBAAkB,EAAEC;QAAnO;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ,KAAK,SAAL;QACI,oBAAO,QAAC,WAAD;UAAa,MAAM,EAAET,MAArB;UAA6B,cAAc,EAAEU,cAA7C;UAA6D,iBAAiB,EAAEC,iBAAhF;UAAmG,QAAQ,EAAET,QAA7G;UAAuH,UAAU,EAAEG,UAAnI;UAA+I,eAAe,EAAEE,eAAhK;UAAiL,eAAe,EAAEC,eAAlM;UAAmN,kBAAkB,EAAEC;QAAvO;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ;QACI;IARR;EAUH,CAXD;;EAcA,SAASI,YAAT,GAAwB;IACpB,IAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAH,EAAoC;MAChCJ,iBAAiB,CAAC,IAAD,CAAjB;IACH;EACJ;;EAED,oBACI;IAAK,EAAE,EAAC,MAAR;IAAe,QAAQ,EAAEE,YAAzB;IAAuC,KAAK,EAAE;MAAEG,MAAM,EAAG,GAAElB,UAAW,GAAxB;MAA4BmB,KAAK,EAAE,MAAnC;MAA2CC,SAAS,EAAE,QAAtD;MAAgEC,OAAO,EAAE,MAAzE;MAAiFC,cAAc,EAAE;IAAjG,CAA9C;IAAA,UACKR,YAAY;EADjB;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA9BuBf,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}