{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Code\\\\helix-app\\\\client\\\\src\\\\components\\\\views\\\\SequenceRender.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ShowMoreButton from \"./ShowMoreButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SequenceRender(_ref) {\n  _s();\n\n  let {\n    reload,\n    sequenceArray,\n    setIconVisibility,\n    setVisibility,\n    visibility,\n    basePairColors,\n    selectedRegion,\n    setShowMoreButton,\n    setSelectedRegion,\n    annotationText\n  } = _ref;\n  const rowSize = 20;\n  const rowMargin = 10;\n  const dnaContainerSize = 90;\n  const marginBottom = 30;\n  const headerMargin = 90;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [bpPresent, setbpPresent] = useState([]);\n  const [renderSequence, setRenderSequence] = useState([]);\n  const [containerWidth, setContainerWidth] = useState();\n  const [cellsPerRow, setCellsPerRow] = useState();\n  const [rowCount, setRowCount] = useState();\n  const [rowMarkersLeft, setRowMarkersLeft] = useState([]);\n  const [rowMarkersRight, setRowMarkersRight] = useState([]); // resize handling\n\n  window.addEventListener('resize', () => {\n    setTimeout(() => {\n      const width = document.getElementById('dna').offsetWidth;\n      setContainerWidth(width);\n    }, 700);\n  }); // sequence config\n\n  useEffect(() => {\n    setRenderSequence(sequenceArray.slice(selectedRegion[0], selectedRegion[1]));\n  }, [sequenceArray, selectedRegion]); // show more\n\n  useEffect(() => {\n    // bug: show more button does not appear sometimes\n    if (sequenceArray.length > selectedRegion[1] && renderSequence.length < sequenceArray.length) {\n      setShowMoreButton( /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n        setSelectedRegion: setSelectedRegion,\n        selectedRegion: selectedRegion,\n        visibility: visibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this));\n    } else setShowMoreButton(); // eslint-disable-next-line\n\n  }, [renderSequence, selectedRegion]); // container formatting\n\n  useEffect(() => {\n    setContainerWidth(document.getElementById('dna').offsetWidth);\n  }, []);\n  useEffect(() => {\n    setCellsPerRow(Math.floor(containerWidth / 20));\n  }, [containerWidth]);\n  useEffect(() => {\n    setRowCount(Math.ceil(renderSequence.length / cellsPerRow));\n  }, [cellsPerRow, renderSequence]);\n  useEffect(() => {\n    const rows = [1];\n\n    for (let i = 1; i < rowCount; i++) {\n      rows.push(i * cellsPerRow + 1);\n    }\n\n    const left = rows.map(num => num = num + selectedRegion[0]);\n    setRowMarkersLeft(left);\n    const right = rows.map(num => num = num + cellsPerRow - 1 + selectedRegion[0]);\n    right.pop();\n    right.push(renderSequence.length + selectedRegion[0]);\n    setRowMarkersRight(right);\n  }, [rowCount, cellsPerRow, renderSequence, selectedRegion]); // building blocks\n\n  const leftCounters = rowMarkersLeft.map(num => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        height: rowSize,\n        width: 'fit-content',\n        textAlign: 'center',\n        marginBottom: rowMargin\n      },\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  });\n  const rightCounters = rowMarkersRight.map(num => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        height: rowSize,\n        width: 'fit-content',\n        textAlign: 'center',\n        marginBottom: rowMargin\n      },\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  });\n  const basePairElements = renderSequence.map((bp, index) => {\n    let color;\n\n    switch (renderSequence[index]) {\n      // need to handle amino acid styling\n      case 'A':\n        color = basePairColors.A;\n        break;\n\n      case 'T':\n        color = basePairColors.T;\n        break;\n\n      case 'G':\n        color = basePairColors.G;\n        break;\n\n      case 'C':\n        color = basePairColors.C;\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: showBasePair,\n      className: \"bp\",\n      id: index + 1,\n      style: {\n        height: rowSize,\n        width: rowSize,\n        justifyContent: 'center',\n        display: 'flex',\n        color: color\n      },\n      children: renderSequence[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  });\n  const rowElements = rowMarkersLeft.map((row, index, array) => {\n    if (index === rowMarkersLeft.length - 1) {\n      const remainder = cellsPerRow - basePairElements.slice(array[index] - 1 - selectedRegion[0], renderSequence.length).length;\n      const spaces = [];\n\n      for (let i = 0; i < remainder; i++) {\n        spaces.push(i);\n      }\n\n      const fillerElements = spaces.map(() => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          height: rowSize,\n          width: rowSize\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 53\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: rowSize,\n          marginBottom: rowMargin,\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        children: [basePairElements.slice(array[index] - 1 - selectedRegion[0], renderSequence.length), fillerElements]\n      }, array[index], true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: rowSize,\n          marginBottom: rowMargin,\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        children: basePairElements.slice(array[index] - 1 - selectedRegion[0], array[index + 1] - 1 - selectedRegion[0])\n      }, array[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this);\n    }\n  }); // styling\n\n  useEffect(() => {\n    document.querySelectorAll('.bp').forEach(element => {\n      const bp = element.textContent;\n\n      switch (bp) {\n        case 'A':\n          element.style.color = basePairColors.A;\n          break;\n\n        case 'T':\n          element.style.color = basePairColors.T;\n          break;\n\n        case 'G':\n          element.style.color = basePairColors.G;\n          break;\n\n        case 'C':\n          element.style.color = basePairColors.C;\n          break;\n\n        default:\n          break;\n      }\n    });\n  }, [basePairColors]); // loading\n\n  useEffect(() => {\n    setbpPresent(document.querySelectorAll('.bp').length);\n  }, [basePairElements]);\n  useEffect(() => {\n    if (bpPresent === renderSequence.length && bpPresent > 1) {\n      setIsLoaded(true);\n    } else {\n      setIsLoaded(false);\n    }\n  }, [bpPresent, renderSequence]);\n  useEffect(() => {\n    // note: can remove loading gif after loaded?\n    if (isLoaded === true) {\n      setVisibility('visible');\n      setIconVisibility('hidden');\n    } else {\n      setVisibility('hidden');\n      setIconVisibility('visible');\n    } // eslint-disable-next-line\n\n  }, [isLoaded]);\n  useEffect(() => {\n    setIsLoaded(!isLoaded); // eslint-disable-next-line\n  }, [reload]); // useEffect(() => {\n  //     console.log(isLoaded)\n  //     console.log('bpPresent')\n  //     console.log(bpPresent)\n  //     console.log('renderSequence')\n  //     console.log(renderSequence.length)\n  // }, [isLoaded])\n\n  function showBasePair(event) {\n    // note: should incorporate this functionality into a feature\n    console.log('bp: ' + (parseInt(event.target.id) + selectedRegion[0]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    style: {\n      zIndex: 0,\n      height: `fit-content`,\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: headerMargin,\n      overflowX: 'clip'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"column\",\n      style: {\n        visibility: visibility,\n        height: '100%',\n        width: `${(100 - dnaContainerSize) / 2}%`,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        userSelect: 'none'\n      },\n      children: leftCounters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dna\",\n      style: {\n        visibility: visibility,\n        width: `${dnaContainerSize}%`,\n        height: '100%',\n        justifyContent: 'center',\n        marginBottom: marginBottom\n      },\n      children: rowElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"column\",\n      style: {\n        visibility: visibility,\n        height: '100%',\n        width: `${(100 - dnaContainerSize) / 2}%`,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        userSelect: 'none'\n      },\n      children: rightCounters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), annotationText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SequenceRender, \"o81RzaXooYA3nmL2LggwVjze5io=\");\n\n_c = SequenceRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"SequenceRender\");","map":{"version":3,"names":["useState","useEffect","ShowMoreButton","SequenceRender","reload","sequenceArray","setIconVisibility","setVisibility","visibility","basePairColors","selectedRegion","setShowMoreButton","setSelectedRegion","annotationText","rowSize","rowMargin","dnaContainerSize","marginBottom","headerMargin","isLoaded","setIsLoaded","bpPresent","setbpPresent","renderSequence","setRenderSequence","containerWidth","setContainerWidth","cellsPerRow","setCellsPerRow","rowCount","setRowCount","rowMarkersLeft","setRowMarkersLeft","rowMarkersRight","setRowMarkersRight","window","addEventListener","setTimeout","width","document","getElementById","offsetWidth","slice","length","Math","floor","ceil","rows","i","push","left","map","num","right","pop","leftCounters","height","textAlign","rightCounters","basePairElements","bp","index","color","A","T","G","C","showBasePair","justifyContent","display","rowElements","row","array","remainder","spaces","fillerElements","flexDirection","querySelectorAll","forEach","element","textContent","style","event","console","log","parseInt","target","id","zIndex","marginTop","overflowX","alignItems","userSelect"],"sources":["C:/Users/micha/OneDrive/Documents/Code/helix-app/client/src/components/views/SequenceRender.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport ShowMoreButton from \"./ShowMoreButton\"\r\n\r\nexport default function SequenceRender ( { reload, sequenceArray, setIconVisibility, setVisibility, visibility, basePairColors, selectedRegion, setShowMoreButton, setSelectedRegion, annotationText } ) {\r\n\r\n    const rowSize = 20\r\n    const rowMargin = 10\r\n    const dnaContainerSize = 90\r\n    const marginBottom = 30\r\n    const headerMargin = 90\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [bpPresent, setbpPresent] = useState([])\r\n    const [renderSequence, setRenderSequence] = useState([])\r\n\r\n    const [containerWidth, setContainerWidth] = useState()\r\n    const [cellsPerRow, setCellsPerRow] = useState()\r\n    const [rowCount, setRowCount] = useState()\r\n    const [rowMarkersLeft, setRowMarkersLeft] = useState([])\r\n    const [rowMarkersRight, setRowMarkersRight] = useState([])\r\n\r\n\r\n\r\n    // resize handling\r\n    window.addEventListener('resize', () => {\r\n        setTimeout(() => {\r\n            const width = document.getElementById('dna').offsetWidth\r\n            setContainerWidth(width)\r\n        }, 700)\r\n    })\r\n\r\n    // sequence config\r\n    useEffect(() => {\r\n        setRenderSequence(sequenceArray.slice(selectedRegion[0], selectedRegion[1]))\r\n    }, [sequenceArray, selectedRegion])\r\n\r\n    // show more\r\n    useEffect(() => { // bug: show more button does not appear sometimes\r\n        if(sequenceArray.length > selectedRegion[1] && renderSequence.length < sequenceArray.length ) {\r\n            setShowMoreButton(<ShowMoreButton setSelectedRegion={setSelectedRegion} selectedRegion={selectedRegion} visibility={visibility}/>)\r\n        } else setShowMoreButton()\r\n        // eslint-disable-next-line\r\n    }, [renderSequence, selectedRegion])\r\n\r\n\r\n    // container formatting\r\n    useEffect(() => {\r\n        setContainerWidth(document.getElementById('dna').offsetWidth)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCellsPerRow(Math.floor(containerWidth / 20))\r\n    }, [containerWidth])\r\n\r\n    useEffect(() => {\r\n        setRowCount(Math.ceil(renderSequence.length / cellsPerRow))\r\n    }, [cellsPerRow, renderSequence])\r\n\r\n    useEffect(() => {\r\n        const rows = [1]\r\n        for(let i = 1; i < rowCount; i++) {\r\n            rows.push((i*cellsPerRow)+1)\r\n        }\r\n        const left = rows.map(num => num = num + selectedRegion[0])\r\n        setRowMarkersLeft(left)\r\n        const right = rows.map((num) => num = (num + cellsPerRow - 1 + selectedRegion[0]))\r\n        right.pop()\r\n        right.push(renderSequence.length + selectedRegion[0])\r\n        setRowMarkersRight(right)\r\n    }, [rowCount, cellsPerRow, renderSequence, selectedRegion])\r\n\r\n\r\n    // building blocks\r\n    const leftCounters = rowMarkersLeft.map((num) => {\r\n        return (\r\n            <span key={num} style={{height: rowSize, width: 'fit-content', textAlign: 'center', marginBottom: rowMargin }}>{num}</span>\r\n        )\r\n    })\r\n\r\n    const rightCounters = rowMarkersRight.map((num) => {\r\n        return (\r\n            <span key={num} style={{height: rowSize, width: 'fit-content', textAlign: 'center', marginBottom: rowMargin }}>{num}</span>\r\n        )\r\n    })\r\n\r\n    const basePairElements = renderSequence.map((bp, index) => {\r\n        let color \r\n        switch (renderSequence[index]) { // need to handle amino acid styling\r\n            case 'A':\r\n                color = basePairColors.A\r\n                break\r\n\r\n            case 'T':\r\n                color = basePairColors.T\r\n                break\r\n\r\n            case 'G':\r\n                color = basePairColors.G\r\n                break\r\n\r\n            case 'C':\r\n                color = basePairColors.C\r\n                break;\r\n\r\n            default:\r\n                break\r\n        }\r\n\r\n\r\n        return (\r\n            <span key={index} onClick={showBasePair} className='bp' id={index+1} style={{ height: rowSize, width: rowSize, justifyContent: 'center', display: 'flex', color: color }}>{renderSequence[index]}</span>\r\n        )\r\n    })\r\n\r\n    const rowElements = rowMarkersLeft.map((row, index, array) => {\r\n        if (index === (rowMarkersLeft.length - 1)) {\r\n            const remainder = cellsPerRow - basePairElements.slice((array[index]-1-selectedRegion[0]), (renderSequence.length)).length\r\n            const spaces = []\r\n            for(let i=0; i < remainder; i++) {\r\n                spaces.push(i)\r\n            }\r\n            const fillerElements = spaces.map(() => <span style={{ height: rowSize, width: rowSize }}></span>)\r\n            return (\r\n                <div key={array[index]} style={{ width: '100%', height: rowSize, marginBottom: rowMargin, display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n                    {basePairElements.slice((array[index]-1-selectedRegion[0]), (renderSequence.length))}\r\n                    {fillerElements}\r\n                </div>\r\n            )} \r\n        else {\r\n            return (\r\n                <div key={array[index]} style={{ width: '100%', height: rowSize, marginBottom: rowMargin, display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n                    {basePairElements.slice((array[index]-1-selectedRegion[0]), (array[index+1]-1-selectedRegion[0]))}\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n\r\n    // styling\r\n    useEffect(() => {\r\n        document.querySelectorAll('.bp').forEach((element) => {\r\n            const bp = element.textContent\r\n            switch (bp) {\r\n                case 'A':\r\n                    element.style.color = basePairColors.A\r\n                    break\r\n    \r\n                case 'T':\r\n                    element.style.color = basePairColors.T\r\n                    break\r\n    \r\n                case 'G':\r\n                    element.style.color = basePairColors.G\r\n                    break\r\n    \r\n                case 'C':\r\n                    element.style.color = basePairColors.C\r\n                    break;\r\n    \r\n                default:\r\n                    break\r\n            }\r\n        })\r\n    }, [basePairColors])\r\n\r\n    // loading\r\n    useEffect(() => {\r\n        setbpPresent(document.querySelectorAll('.bp').length)\r\n    }, [basePairElements])\r\n\r\n    useEffect(() => {\r\n        if(bpPresent === renderSequence.length && bpPresent > 1) {\r\n            setIsLoaded(true)\r\n        }\r\n        else {\r\n            setIsLoaded(false)\r\n        }\r\n    }, [bpPresent, renderSequence])\r\n\r\n    useEffect(() => { // note: can remove loading gif after loaded?\r\n        if (isLoaded === true) {\r\n            setVisibility('visible')\r\n            setIconVisibility('hidden')\r\n        } \r\n        else {\r\n            setVisibility('hidden')\r\n            setIconVisibility('visible')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isLoaded])\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(!isLoaded)\r\n    // eslint-disable-next-line\r\n    }, [reload])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(isLoaded)\r\n    //     console.log('bpPresent')\r\n    //     console.log(bpPresent)\r\n    //     console.log('renderSequence')\r\n    //     console.log(renderSequence.length)\r\n    // }, [isLoaded])\r\n\r\n    \r\n    function showBasePair(event) { // note: should incorporate this functionality into a feature\r\n        console.log('bp: ' + (parseInt(event.target.id)+selectedRegion[0]))\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div id=\"container\" style={{ zIndex: 0, height: `fit-content`, width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', marginTop: headerMargin, overflowX: 'clip' }}>\r\n            <div id=\"column\" style={{ visibility: visibility, height: '100%', width: `${(100 - dnaContainerSize) / 2}%`, display: 'flex', flexDirection: 'column', alignItems: 'center', userSelect: 'none' }}>{leftCounters}</div>\r\n                <div id=\"dna\" style={{ visibility: visibility, width: `${dnaContainerSize}%`, height: '100%', justifyContent: 'center', marginBottom: marginBottom }}>\r\n                    {rowElements}\r\n                </div>\r\n            <div id=\"column\" style={{ visibility: visibility, height: '100%', width: `${(100 - dnaContainerSize) / 2}%`, display: 'flex', flexDirection: 'column', alignItems: 'center', userSelect: 'none' }}>{rightCounters}</div>\r\n            {annotationText}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}